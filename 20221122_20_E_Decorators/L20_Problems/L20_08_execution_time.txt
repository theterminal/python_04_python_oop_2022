20221122 - Python - Python OOP - Decorators
08 - *Execution Time


Import the time module.
Create a decorator called exec_time.
It should calculate how much time a function needs to be executed.
See the examples for more clarification.

Note: You might have different results from the given ones.
      The solutions to this problem cannot be submitted in the judge system.


Hints:
-----
    *) Use the time library to start a timer
    *) Execute the function
    *) Stop the timer and return the result



____________ Test Data _____________


Test Code 1:
-----------
@exec_time
def loop(start, end):
    total = 0
    for x in range(start, end):
        total += x
    return total
print(loop(1, 10000000))


Output 1: (The actual result depends on the machine you are using!)
--------
0.8342537879943848


-------------------------------------


Test Code 2:
-----------
@exec_time
def concatenate(strings):
    result = ""
    for string in strings:
        result += string
    return result
print(concatenate(["a" for i in range(1000000)]))


Output 2: (The actual result depends on the machine you are using!)
--------
0.14537858963012695


-------------------------------------


Test Code 3:
-----------
@exec_time
def loop():
    count = 0
    for i in range(1, 9999999):
        count += 1
print(loop())


Output 3: (The actual result depends on the machine you are using!)
--------
0.4199554920196533


-------------------------------------
